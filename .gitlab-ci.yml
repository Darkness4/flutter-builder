image: docker:latest

services:
  - docker:dind

variables:
  CONTAINER_NAME: darkness4/flutter-builder

stages:
  - build
  - test
  - deploy

before_script:
  - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  - docker info

build-master-28:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:28-master 28/master
  only:
  - master

build-dev-28:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:28-dev 28/dev
  only:
  - master

build-beta-28:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:28-beta 28/beta
  only:
  - master

build-stable-28:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:28-stable 28/stable
  only:
  - master

build-master-27:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:27-master 27/master
  only:
  - master

build-dev-27:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:27-dev 27/dev
  only:
  - master

build-beta-27:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:27-beta 27/beta
  only:
  - master

build-stable-27:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:27-stable 27/stable
  only:
  - master


build-master-29:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:29-master 29/master
  only:
  - master

build-dev-29:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:29-dev 29/dev
  only:
  - master

build-beta-29:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:29-beta 29/beta
  only:
  - master

build-stable-29:
  stage: build
  script:
    - docker build --tag $CONTAINER_NAME:29-stable 29/stable
  only:
  - master



test-master-28:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:28-master 28/master
    - docker run --rm $CONTAINER_NAME:28-master [ ! -d /opt/android-sdk/platforms/android-28 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-dev-28:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:28-dev 28/dev
    - docker run --rm $CONTAINER_NAME:28-dev [ ! -d /opt/android-sdk/platforms/android-28 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-beta-28:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:28-beta 28/beta
    - docker run --rm $CONTAINER_NAME:28-beta [ ! -d /opt/android-sdk/platforms/android-28 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-stable-28:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:28-stable 28/stable
    - docker run --rm $CONTAINER_NAME:28-stable [ ! -d /opt/android-sdk/platforms/android-28 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master

test-master-27:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:27-master 27/master
    - docker run --rm $CONTAINER_NAME:27-master [ ! -d /opt/android-sdk/platforms/android-27 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-dev-27:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:27-dev 27/dev
    - docker run --rm $CONTAINER_NAME:27-dev [ ! -d /opt/android-sdk/platforms/android-27 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-beta-27:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:27-beta 27/beta
    - docker run --rm $CONTAINER_NAME:27-beta [ ! -d /opt/android-sdk/platforms/android-27 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-stable-27:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:27-stable 27/stable
    - docker run --rm $CONTAINER_NAME:27-stable [ ! -d /opt/android-sdk/platforms/android-27 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master

test-master-29:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:29-master 29/master
    - docker run --rm $CONTAINER_NAME:29-master [ ! -d /opt/android-sdk/platforms/android-29 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
  only:
  - master
test-dev-29:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:29-dev 29/dev
    - docker run --rm $CONTAINER_NAME:29-dev [ ! -d /opt/android-sdk/platforms/android-29 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-beta-29:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:29-beta 29/beta
    - docker run --rm $CONTAINER_NAME:29-beta [ ! -d /opt/android-sdk/platforms/android-29 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master
test-stable-29:
  stage: test
  script:
    - docker build --tag $CONTAINER_NAME:29-stable 29/stable
    - docker run --rm $CONTAINER_NAME:29-stable [ ! -d /opt/android-sdk/platforms/android-29 ]&&exit 1 || (echo "Found" && exit 0)
  only:
  - master


# deploy-master-28:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:28-master 28/master
    # - docker push $CONTAINER_NAME:28-master
    # - docker tag $CONTAINER_NAME:28-master $CONTAINER_NAME:28
    # - docker push $CONTAINER_NAME:28
    # - docker tag $CONTAINER_NAME:28-master $CONTAINER_NAME:latest-master
    # - docker push $CONTAINER_NAME:latest-master
    # - docker tag $CONTAINER_NAME:28-master $CONTAINER_NAME:latest
    # - docker push $CONTAINER_NAME:latest
    # - docker tag $CONTAINER_NAME:28-master $CONTAINER_NAME:master
    # - docker push $CONTAINER_NAME:master
  # only:
    # - master
# deploy-dev-28:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:28-dev 28/dev
    # - docker push $CONTAINER_NAME:28-dev
    # - docker tag $CONTAINER_NAME:28-dev $CONTAINER_NAME:dev
    # - docker push $CONTAINER_NAME:dev
    # - docker tag $CONTAINER_NAME:28-dev $CONTAINER_NAME:latest-dev
    # - docker push $CONTAINER_NAME:latest-dev
  # only:
    # - master
# deploy-beta-28:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:28-beta 28/beta
    # - docker push $CONTAINER_NAME:28-beta
    # - docker tag $CONTAINER_NAME:28-beta $CONTAINER_NAME:beta
    # - docker push $CONTAINER_NAME:beta
    # - docker tag $CONTAINER_NAME:28-beta $CONTAINER_NAME:latest-beta
    # - docker push $CONTAINER_NAME:latest-beta
  # only:
    # - master
# deploy-stable-28:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:28-stable 28/stable
    # - docker push $CONTAINER_NAME:28-stable
    # - docker tag $CONTAINER_NAME:28-stable $CONTAINER_NAME:stable
    # - docker push $CONTAINER_NAME:stable
    # - docker tag $CONTAINER_NAME:28-stable $CONTAINER_NAME:latest-stable
    # - docker push $CONTAINER_NAME:latest-stable
  # only:
    # - master

# deploy-master-27:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:27-master 27/master
    # - docker push $CONTAINER_NAME:27-master
    # - docker tag $CONTAINER_NAME:27-master $CONTAINER_NAME:27
    # - docker push $CONTAINER_NAME:27
  # only:
    # - master
# deploy-dev-27:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:27-dev 27/dev
    # - docker push $CONTAINER_NAME:27-dev
  # only:
    # - master
# deploy-beta-27:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:27-beta 27/beta
    # - docker push $CONTAINER_NAME:27-beta
  # only:
    # - master
# deploy-stable-27:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:27-stable 27/stable
    # - docker push $CONTAINER_NAME:27-stable
  # only:
    # - master

# deploy-master-29:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:29-master 29/master
    # - docker push $CONTAINER_NAME:29-master
    # - docker tag $CONTAINER_NAME:29-master $CONTAINER_NAME:29
    # - docker push $CONTAINER_NAME:29
  # only:
    # - master
# deploy-dev-29:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:29-dev 29/dev
    # - docker push $CONTAINER_NAME:29-dev
  # only:
    # - master
# deploy-beta-29:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:29-beta 29/beta
    # - docker push $CONTAINER_NAME:29-beta
  # only:
    # - master
# deploy-stable-29:
  # stage: deploy
  # script:
    # - docker build --tag $CONTAINER_NAME:29-stable 29/stable
    # - docker push $CONTAINER_NAME:29-stable
  # only:
    # - master
    
deploy:
  stage: deploy
  script:
    - apk add curl
    - curl -X POST $BUILD_TRIGGER_URL > /dev/null
  only:
    - master

after_script:
  - docker images
